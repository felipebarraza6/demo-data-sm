{"ast":null,"code":"var _jsxFileName = \"/Users/felipebarraza/Desktop/ui_crm/src/components/home/Profile.js\";\nimport React, { useReducer, useEffect, useState } from 'react';\nimport { Button, Spin, Tooltip, Modal, Table, Tag, notification, Drawer, Row, Col, Divider } from 'antd';\nimport { BorderlessTableOutlined, UserOutlined, ReloadOutlined, StopOutlined } from '@ant-design/icons';\nimport { reducer } from '../../reducers/profile.js';\nimport api from '../../api/endpoints'; //Components\n\nimport ModalEnterprise from '../../components/clients/ModalEnterprise'; //Actions\n\nimport { viewTask } from '../../actions/tasks';\nimport { viewPerson } from '../../actions/employess';\nimport { finishTaskModal } from '../../actions/tasks_dashboard';\nexport const Profile = () => {\n  const initialState = {\n    loading: true,\n    data: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const columns = [{\n    title: 'ID',\n    dataIndex: 'id',\n    key: 'id'\n  }, {\n    title: 'Empresa',\n    dataIndex: 'client',\n    key: 'client',\n    render: client => client ? /*#__PURE__*/React.createElement(Button, {\n      onClick: () => ModalEnterprise(client),\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 40\n      }\n    }, client.name) : /*#__PURE__*/React.createElement(StopOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 128\n      }\n    })\n  }, {\n    title: 'Cliente',\n    dataIndex: 'employee',\n    key: 'employee',\n    render: employee => employee ? /*#__PURE__*/React.createElement(Button, {\n      onClick: () => viewPerson(employee),\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 44\n      }\n    }, employee.name) : /*#__PURE__*/React.createElement(StopOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 131\n      }\n    })\n  }, {\n    title: 'Fecha',\n    dataIndex: 'date',\n    key: 'date',\n    render: date => date ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: \"volcano\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 39\n      }\n    }, date.slice(0, 10)), /*#__PURE__*/React.createElement(Tag, {\n      color: \"geekblue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 84\n      }\n    }, date.slice(11, 19), \" hrs\")) : /*#__PURE__*/React.createElement(StopOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 142\n      }\n    })\n  }, {\n    title: 'Tarea',\n    dataIndex: 'type_action',\n    key: 'type action',\n    render: type_action => type_action ? /*#__PURE__*/React.createElement(Tag, {\n      color: \"processing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 50\n      }\n    }, type_action) : /*#__PURE__*/React.createElement(StopOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 96\n      }\n    })\n  }, {\n    title: 'Nota',\n    dataIndex: 'note',\n    key: 'note',\n    render: note => note ? /*#__PURE__*/React.createElement(Button, {\n      onClick: () => Modal.info({\n        title: `Nota de Tarea`,\n        content: note\n      }),\n      type: \"dashed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 36\n      }\n    }, \"Nota\") : /*#__PURE__*/React.createElement(StopOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 144\n      }\n    })\n  }, {\n    title: '',\n    dataIndex: '',\n    key: 'x',\n    render: task => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginRight: '5px'\n      },\n      onClick: () => viewTask(task),\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"Ver\"))\n  }, {\n    title: '',\n    dataIndex: '',\n    key: 'x',\n    render: task => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      type: \"dashed\",\n      style: {\n        borderColor: 'green',\n        color: 'green'\n      },\n      onClick: () => {\n        finishTaskModal(task.id, updateTasks);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Completar\"))\n  }];\n\n  const ModalTask = () => {\n    Modal.success({\n      content: /*#__PURE__*/React.createElement(Table, {\n        columns: columns,\n        dataSource: state.data.data.actions,\n        pagination: {\n          pageSize: 3,\n          simple: true\n        },\n        rowKey: \"id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 22\n        }\n      }),\n      title: `Tareas pendientes de @${state.data.data.user.username}`,\n      width: '1220px'\n    });\n  };\n\n  const updateTasks = async () => {\n    try {\n      const response = await api.user.profile();\n\n      if (response) {\n        dispatch({\n          type: 'GET_PROFILE',\n          loading: false,\n          payload: response\n        });\n        notification.info({\n          message: `Tareas actualizadas!`,\n          placement: \"bottomRight\"\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: 'GET_PROFILE',\n        loading: false,\n        error: error\n      });\n    }\n  };\n\n  const [profile, setProfile] = useState({\n    visible: false\n  });\n\n  const Profile = () => {\n    setProfile({\n      visible: true\n    });\n  };\n\n  const closeProfile = () => {\n    setProfile({\n      visible: false\n    });\n  };\n\n  useEffect(() => {\n    let isCalled = false;\n\n    const fetchData = async () => {\n      try {\n        const response = await api.user.profile();\n\n        if (!isCalled) {\n          dispatch({\n            type: 'GET_PROFILE',\n            loading: false,\n            payload: response\n          });\n        }\n      } catch (error) {\n        dispatch({\n          loading: false,\n          error: error.message\n        });\n      }\n    };\n\n    fetchData();\n    return () => {\n      isCalled = true;\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, !state.loading && /*#__PURE__*/React.createElement(Drawer, {\n    width: \"400px\",\n    visible: profile.visible,\n    onClose: closeProfile,\n    closable: false,\n    title: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 30\n      }\n    }), \" \", state.data.data.user.email),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    flex: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 29\n    }\n  }, \"Usuario\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 29\n    }\n  }, \"Nombre\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 29\n    }\n  }, \"Apellido\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 29\n    }\n  }, \"Email\")), /*#__PURE__*/React.createElement(Col, {\n    flex: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  }, state.data.data.user.username), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 29\n    }\n  }, state.data.data.user.first_name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 29\n    }\n  }, state.data.data.user.last_name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 29\n    }\n  }, state.data.data.user.email)), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Actualizar datos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: updateTasks,\n    style: {\n      marginRight: '20px'\n    },\n    type: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ReloadOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    onClick: ModalTask,\n    type: \"primary\",\n    style: {\n      marginRight: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BorderlessTableOutlined, {\n    style: {\n      marginRight: '3px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }), state.loading ? /*#__PURE__*/React.createElement(Spin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 34\n    }\n  }) : state.data.data.actions.length, /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      paddingLeft: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, \"Tareas Pendientes\")), /*#__PURE__*/React.createElement(Button, {\n    onClick: Profile,\n    type: \"link\",\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(UserOutlined, {\n    style: {\n      fontSize: '20px',\n      paddingRight: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }), state.loading ? /*#__PURE__*/React.createElement(Spin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 30\n    }\n  }) : state.data.data.user.email));\n};\nexport default Profile;","map":{"version":3,"sources":["/Users/felipebarraza/Desktop/ui_crm/src/components/home/Profile.js"],"names":["React","useReducer","useEffect","useState","Button","Spin","Tooltip","Modal","Table","Tag","notification","Drawer","Row","Col","Divider","BorderlessTableOutlined","UserOutlined","ReloadOutlined","StopOutlined","reducer","api","ModalEnterprise","viewTask","viewPerson","finishTaskModal","Profile","initialState","loading","data","error","state","dispatch","columns","title","dataIndex","key","render","client","name","employee","date","slice","type_action","note","info","content","task","marginRight","borderColor","color","id","updateTasks","ModalTask","success","actions","pageSize","simple","user","username","width","response","profile","type","payload","message","placement","setProfile","visible","closeProfile","isCalled","fetchData","email","marginTop","first_name","last_name","length","paddingLeft","fontSize","paddingRight"],"mappings":"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","sourcesContent":["import React, {useReducer, useEffect, useState } from 'react'\n\nimport {Button, Spin, Tooltip, Modal, Table, Tag, notification, Drawer, Row, Col, Divider } from 'antd'\nimport {BorderlessTableOutlined, UserOutlined, ReloadOutlined, StopOutlined} from '@ant-design/icons'\n\nimport { reducer } from '../../reducers/profile.js'\nimport api from '../../api/endpoints'\n\n//Components\nimport ModalEnterprise from '../../components/clients/ModalEnterprise'\n\n//Actions\nimport { viewTask } from '../../actions/tasks'\nimport { viewPerson } from '../../actions/employess'\nimport { finishTaskModal } from '../../actions/tasks_dashboard'\n\n\nexport const Profile = () =>{\n\n    const initialState = {\n        loading: true,\n        data:  null,\n        error: null        \n    }\n\n    const [state, dispatch] = useReducer(reducer, initialState)\n\n    const columns = [\n        {\n            title: 'ID',\n            dataIndex: 'id',\n            key: 'id',\n        },\n        {\n            title: 'Empresa',\n            dataIndex: 'client',\n            key: 'client',\n            render: client => client ? <Button onClick={() => ModalEnterprise(client)} type='primary'>{client.name}</Button> : <StopOutlined />,\n        },\n        {\n            title: 'Cliente',\n            dataIndex: 'employee',\n            key: 'employee',\n            render: employee => employee ? <Button onClick={() => viewPerson(employee)} type='primary'>{employee.name}</Button> : <StopOutlined />\n        },\n        {\n            title: 'Fecha',\n            dataIndex: 'date',\n            key: 'date',\n            render: date =>  date ? <><Tag color=\"volcano\">{date.slice(0,10)}</Tag><Tag color=\"geekblue\">{date.slice(11, 19)} hrs</Tag></> : <StopOutlined />\n        },\n        {\n            title: 'Tarea',\n            dataIndex: 'type_action',\n            key: 'type action',\n            render: type_action => type_action ? <Tag color='processing'>{type_action}</Tag> : <StopOutlined/>\n        },\n        {\n            title: 'Nota',\n            dataIndex: 'note',\n            key: 'note',\n            render: note => note ? <Button onClick={() => Modal.info({ title: `Nota de Tarea`, content: note })} type='dashed'>Nota</Button> : <StopOutlined/>\n\n        },\n        { title: '', dataIndex: '', key: 'x', render: task =><> \n            <Button style={{marginRight:'5px'}} onClick={() => viewTask(task)}type='primary'>Ver</Button>            \n        \n        </>},\n        { title: '', dataIndex: '', key: 'x', render: task =><> \n        \n        \n        <Button \n            type=\"dashed\"\n            style={{borderColor:'green', color:'green'}}\n            onClick={()=>{\n                finishTaskModal(task.id, updateTasks)    \n                            \n            }\n\n            }\n        >\n            Completar\n        </Button>\n    \n    </>},\n        \n    ]\n\n    const ModalTask = () =>{\n        Modal.success({\n            content: <Table columns={columns} dataSource={state.data.data.actions} pagination={{ pageSize: 3, simple:true}} rowKey='id'></Table>,\n            title: `Tareas pendientes de @${state.data.data.user.username}`,\n            width: '1220px'\n        })\n    }\n\n    const updateTasks = async () => {\n\n        try{\n            const response = await api.user.profile()\n            if(response){\n                dispatch({\n                    type: 'GET_PROFILE',\n                    loading: false,\n                    payload: response\n                })\n                notification.info({\n                    message: `Tareas actualizadas!` ,\n                    placement: \"bottomRight\",\n                })\n            }\n\n        }catch(error){\n            dispatch({\n                type: 'GET_PROFILE',\n                loading: false,\n                error: error\n            })\n        }\n\n    }\n\n    const [profile, setProfile] = useState({visible:false})\n\n    const Profile = () =>{\n        setProfile({\n            visible:true\n        })\n    }\n\n    const closeProfile = () => {\n        setProfile({\n            visible: false\n        })\n    }\n\n    useEffect(() => {\n\n        let isCalled = false\n\n        const fetchData = async() => {\n\n            try{\n                const response = await api.user.profile()\n\n                if(!isCalled){\n                    dispatch({\n                        type: 'GET_PROFILE',\n                        loading: false,\n                        payload: response\n                    })\n                }\n            }catch(error){\n                dispatch({\n                    loading: false,\n                    error:error.message\n                })\n            }\n        }\n\n        fetchData()\n\n        return () => {\n            isCalled = true\n        }\n\n    }, [])\n    \n    return (\n        <React.Fragment>\n\n            {!state.loading &&\n                <Drawer\n                    width='400px'\n                    visible={profile.visible}\n                    onClose={closeProfile}\n                    closable={false}\n                    title={<><UserOutlined/> {state.data.data.user.email}</>}\n                >\n                    <Row style={{marginTop:'50px'}}>\n                        <Col flex={2}>\n                            <p>Usuario</p>\n                            <p>Nombre</p>\n                            <p>Apellido</p>\n                            <p>Email</p>\n                        </Col>\n                        <Col flex={3}>\n                            <p>{state.data.data.user.username}</p>\n                            <p>{state.data.data.user.first_name}</p>\n                            <p>{state.data.data.user.last_name}</p>\n                            <p>{state.data.data.user.email}</p>\n                        </Col>\n                        <Divider />\n                    </Row>\n\n                </Drawer>\n            }\n\n            <Tooltip title=\"Actualizar datos\">\n                <Button onClick={updateTasks} style={{ marginRight:'20px'}} type=\"link\" >\n                    <ReloadOutlined />\n                </Button>\n            </Tooltip>\n\n            <Button onClick={ModalTask} type='primary' style={{marginRight:'15px'}}>\n                <BorderlessTableOutlined style={{marginRight:'3px'}} />\n                {state.loading ? <Spin/>: state.data.data.actions.length}\n                <i style={{paddingLeft:'15px'}}>Tareas Pendientes</i>\n            </Button>\n\n            <Button onClick={Profile} type='link' style={{color:'white'}}>\n            <UserOutlined style={{fontSize:'20px', paddingRight:'5px'}} />\n            {state.loading ? <Spin/>: state.data.data.user.email }\n            </Button>\n        </React.Fragment>\n    )\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}