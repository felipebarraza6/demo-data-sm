{"ast":null,"code":"var _jsxFileName = \"/Users/felipebarraza/Desktop/ui_crm/src/components/clients/Clients.js\";\nimport React, { useReducer, useEffect } from 'react';\nimport { Row, Col, Card, Pagination, Spin, Skeleton } from 'antd'; //Reducer\n\nimport { reducer } from '../../reducers/clients.js'; //Components\n\nimport Totals from './Totals';\nimport CardEnterprise from './CardEnterprise';\nimport TableClients from './TableClients';\nimport ModalFrom from './ModalForm';\nimport ModalUpdateForm from './ModalUpdateForm'; //Actions\n\nimport { getEnterprises } from '../../actions/employess';\nimport { getTotals } from '../../actions/employess';\nimport { getPersons, createPerson, updatePerson } from '../../actions/employess';\n\nconst Clients = () => {\n  const initialState = {\n    loading: false,\n    loading_cards: false,\n    loading_table: false,\n    enterprises: null,\n    pageEnterprise: 1,\n    dataClients: null,\n    currentPage: 1,\n    enterprise_selected: '',\n    quantity_persons: null,\n    pageTable: 1,\n    enterpriseModal: null,\n    modalFormVisible: false,\n    modalUpdateVisible: false,\n    personModal: null,\n    totals: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const elementsSkeleton = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\n  useEffect(() => {\n    dispatch({\n      type: 'LOADING'\n    });\n    getTotals(dispatch);\n    getEnterprises(dispatch, 1);\n    getPersons(dispatch, 1, '');\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, state.modalFormVisible && /*#__PURE__*/React.createElement(ModalFrom, {\n    visible: state.modalFormVisible,\n    onCreate: values => createPerson(dispatch, values, state.enterpriseModal, state.pageTable),\n    enterprise: state.enterpriseModal,\n    onCancel: () => dispatch({\n      type: 'OFF_MODAL_CREATE'\n    }),\n    error: state.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), state.modalUpdateVisible && /*#__PURE__*/React.createElement(ModalUpdateForm, {\n    visible: state.modalUpdateVisible,\n    onCreate: values => updatePerson(dispatch, values, state.pageTable, state.enterprise_selected, values),\n    person: state.personModal,\n    onCancel: () => dispatch({\n      type: 'OFF_MODAL_UPDATE'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), state.loading ? /*#__PURE__*/React.createElement(Spin, {\n    size: \"large\",\n    style: {\n      marginLeft: '40%',\n      marginTop: '15%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 26\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, state.totals && /*#__PURE__*/React.createElement(Totals, {\n    data: state.totals,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 30\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, state.loading_cards ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, elementsSkeleton.map(number => /*#__PURE__*/React.createElement(Card.Grid, {\n    key: number,\n    hoverable: false,\n    style: {\n      backgroundColor: 'white',\n      width: '282px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Skeleton, {\n    active: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }))))) : /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, state.enterprises && state.enterprises.results.map(value => /*#__PURE__*/React.createElement(Card.Grid, {\n    key: value.id,\n    style: {\n      backgroundColor: 'white',\n      width: '282px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardEnterprise, {\n    data: value,\n    dispatch: dispatch,\n    employess: state.personsEnterprise,\n    loading: state.loading_cards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      margin: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, state.enterprises && /*#__PURE__*/React.createElement(Pagination, {\n    size: \"small\",\n    total: state.enterprises.count,\n    onChange: page => getEnterprises(dispatch, page),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 40\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    style: {\n      paddingRight: '20px'\n    },\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableClients, {\n    dispatch: dispatch,\n    data: state.dataClients,\n    loading: state.loading_table,\n    quantity: state.quantity_persons,\n    enterprise: state.enterprise_selected,\n    page: state.pageTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  })))));\n};\n\nexport default Clients;","map":{"version":3,"sources":["/Users/felipebarraza/Desktop/ui_crm/src/components/clients/Clients.js"],"names":["React","useReducer","useEffect","Row","Col","Card","Pagination","Spin","Skeleton","reducer","Totals","CardEnterprise","TableClients","ModalFrom","ModalUpdateForm","getEnterprises","getTotals","getPersons","createPerson","updatePerson","Clients","initialState","loading","loading_cards","loading_table","enterprises","pageEnterprise","dataClients","currentPage","enterprise_selected","quantity_persons","pageTable","enterpriseModal","modalFormVisible","modalUpdateVisible","personModal","totals","error","state","dispatch","elementsSkeleton","type","values","marginLeft","marginTop","marginBottom","map","number","backgroundColor","width","results","value","id","personsEnterprise","margin","count","page","paddingRight"],"mappings":"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","sourcesContent":["import React,{useReducer, useEffect} from 'react'\n\nimport {Row, Col, Card, Pagination, Spin, Skeleton } from 'antd'\n\n//Reducer\nimport { reducer } from '../../reducers/clients.js'\n\n//Components\nimport Totals from './Totals'\nimport CardEnterprise from './CardEnterprise'\nimport TableClients from './TableClients'\nimport ModalFrom from './ModalForm'\nimport ModalUpdateForm from './ModalUpdateForm'\n\n//Actions\nimport { getEnterprises } from '../../actions/employess'\nimport { getTotals } from '../../actions/employess'\nimport { getPersons,createPerson, updatePerson } from '../../actions/employess'\n\n\nconst Clients = () =>{\n\n    const initialState = {\n        loading:false,\n        loading_cards:false,\n        loading_table: false,\n\n        enterprises:null,\n        pageEnterprise:1,\n        \n        dataClients:null,\n        currentPage: 1,\n        enterprise_selected:'',\n        quantity_persons:null,\n        pageTable:1,\n\n        enterpriseModal:null,\n        modalFormVisible: false,\n\n        modalUpdateVisible: false,\n        personModal: null,\n                \n        totals:null,        \n\n        error:null\n    }  \n\n    const [state, dispatch] = useReducer(reducer, initialState)\n    \n    const elementsSkeleton = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'] \n    \n    useEffect(() => {\n        \n        dispatch({type:'LOADING'})\n        \n        getTotals(dispatch)\n\n        getEnterprises(dispatch, 1)\n\n        getPersons(dispatch, 1, '')\n       \n    }, [])\n    \n    \n\n    return(\n        <>     \n        \n        {state.modalFormVisible &&\n        <ModalFrom visible={state.modalFormVisible} onCreate={(values) => createPerson(dispatch,values, state.enterpriseModal, state.pageTable)} enterprise={state.enterpriseModal} onCancel={ () => dispatch({type:'OFF_MODAL_CREATE' })} error={state.error}/>\n        }\n\n        {state.modalUpdateVisible &&\n        <ModalUpdateForm visible={state.modalUpdateVisible} onCreate={(values) => updatePerson(dispatch, values, state.pageTable, state.enterprise_selected, values)} person={state.personModal} onCancel={()=> \n        \n        dispatch({type:'OFF_MODAL_UPDATE'}) }/>}\n        \n        {state.loading ? <Spin size=\"large\" style={{ marginLeft:'40%', marginTop:'15%'}} />:\n        <>\n        <Row style={{marginBottom:'20px'}}>\n            {state.totals && <Totals data={state.totals} />}            \n        </Row>\n        <Row style={{marginBottom:'20px'}}>\n        <Col span={16}>                    \n            \n            {state.loading_cards ?                  \n                <>\n                <Row>\n                    {elementsSkeleton.map((number) => \n                        <Card.Grid key={number} hoverable={false} style={{backgroundColor:'white', width:'282px'}}>\n                            <Skeleton active />\n                        </Card.Grid>\n                    )}                                   \n                </Row>\n                \n                </>\n                :\n                <Row>\n                    {state.enterprises && state.enterprises.results.map((value) =>\n                        <Card.Grid key={value.id} style={{backgroundColor:'white', width:'282px'}}>\n                        <CardEnterprise \n                            data={value} \n                            dispatch={dispatch} \n                            employess={state.personsEnterprise}\n                            loading={state.loading_cards}                                                         \n                        />\n                    </Card.Grid>\n                    )}                    \n                </Row>\n                }        \n                <Row style={{margin:'20px'}}>\n                { state.enterprises && <Pagination size=\"small\" total={state.enterprises.count} onChange={(page)=> getEnterprises(dispatch, page)} />}\n                </Row>                                \n            </Col>            \n            <Col style={{paddingRight:'20px'}} span={8}>\n                <TableClients \n                    dispatch={dispatch} \n                    data={state.dataClients} \n                    loading={state.loading_table}\n                    quantity={state.quantity_persons}\n                    enterprise={state.enterprise_selected}\n                    page={state.pageTable} \n                />\n            </Col>\n        </Row>\n        </>\n        }\n        </>\n    )\n}\n\nexport default Clients"]},"metadata":{},"sourceType":"module"}