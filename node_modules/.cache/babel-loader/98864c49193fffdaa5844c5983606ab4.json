{"ast":null,"code":"var _jsxFileName = \"/Users/felipebarraza/Desktop/ui_crm/src/actions/employess.js\";\nimport React from 'react';\nimport api from '../api/endpoints';\nimport { Modal, notification, Descriptions } from 'antd';\nimport { DeleteOutlined, UserOutlined } from '@ant-design/icons';\nexport const viewPerson = person => {\n  Modal.info({\n    title: /*#__PURE__*/React.createElement(React.Fragment, null, person.name),\n    icon: /*#__PURE__*/React.createElement(UserOutlined, {\n      style: {\n        color: '#1890ff'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 15\n      }\n    }),\n    content: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Descriptions, {\n      title: 'Datos',\n      bordered: true,\n      style: {\n        marginTop: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Empresa\",\n      span: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, person.enterprise), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Cargo\",\n      span: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, person.charge), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Email\",\n      span: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, person.email), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Telefono\",\n      span: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, person.phone_number))),\n    okText: 'OK',\n    width: '900px'\n  });\n};\nexport const getTotals = async dispatch => {\n  try {\n    const employee = await api.employess.get_totals_employees();\n    dispatch({\n      type: 'GET_TOTALS',\n      payload: employee\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPersons = async (dispatch, page, enterprise) => {\n  dispatch({\n    type: 'LOADING_TABLE'\n  });\n\n  try {\n    const employess = await api.employess.get_employess(page, null, enterprise.id);\n    dispatch({\n      type: 'GET_PERSONS',\n      payload: employess.data,\n      enterprise: enterprise,\n      page: page\n    });\n  } catch (error) {\n    console.log({\n      error\n    });\n  }\n};\nexport const getEnterprises = async (dispatch, page) => {\n  dispatch({\n    type: 'LOADING_CARDS'\n  });\n\n  try {\n    const enterprises = await api.enterprises.get_enterprises(page);\n    dispatch({\n      type: 'GET_ENTERPRISES',\n      payload: enterprises\n    });\n  } catch (error) {}\n};\nexport const deletePerson = async (dispatch, person, page, enterprise) => {\n  try {\n    Modal.confirm({\n      title: `Eliminar Persona`,\n      icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 19\n        }\n      }),\n      content: `Estas seguro de eliminar a ${person.name}, una vez eliminada no podrÃ¡s recuperar este registro`,\n      okText: 'ELIMINAR',\n      okType: 'danger',\n      cancelType: 'danger',\n      width: '600px',\n      onOk: async () => {\n        const data = await api.employess.delete_employee(person.id);\n\n        if (data.status) {\n          notification.open({\n            message: `Persona Eliminada!`,\n            description: `${person.name} fue eliminado`,\n            icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n              style: {\n                color: '#red'\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 27\n              }\n            })\n          });\n        }\n\n        getPersons(dispatch, page, enterprise);\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePerson = async (dispatch, person, page, enterprise, data) => {\n  try {\n    const employee = await api.employess.update_employee(person.id, data);\n\n    if (employee.status) {\n      notification.open({\n        message: `Persona Actualizada!`,\n        description: `${person.name} fue actualiado`,\n        icon: /*#__PURE__*/React.createElement(UserOutlined, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 23\n          }\n        })\n      });\n      dispatch({\n        type: 'OFF_MODAL_UPDATE'\n      });\n      getPersons(dispatch, page, enterprise);\n      getTotals(dispatch);\n    }\n  } catch (error) {\n    console.log({\n      error\n    });\n  }\n};\nexport const createPerson = async (dispatch, data, enterprise, page) => {\n  data = { ...data,\n    \"enterprise\": enterprise.id\n  };\n\n  try {\n    const person = await api.employess.create_employee(data);\n\n    if (person.status) {\n      notification.open({\n        message: 'Persona creada!',\n        description: `${data.name} fue creado`,\n        icon: /*#__PURE__*/React.createElement(UserOutlined, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 23\n          }\n        })\n      });\n      dispatch({\n        type: 'OFF_MODAL_CREATE'\n      });\n      getPersons(dispatch, page, enterprise);\n      getTotals(dispatch);\n    }\n  } catch (error) {\n    console.log({\n      error\n    });\n    dispatch({\n      type: 'ERROR',\n      payload: {\n        error\n      }\n    });\n  }\n};\nexport const visibleModalForm = (dispatch, enterprise) => {\n  dispatch({\n    type: 'VISIBLE_MODAL_CREATE',\n    enterprise: enterprise\n  });\n};\nexport const visibleModalUpdateForm = (dispatch, person) => {\n  dispatch({\n    type: 'VISIBLE_MODAL_UPDATE',\n    person: person\n  });\n};\nexport const searchEmployee = async (dispatch, name_employee, page) => {\n  try {\n    const search = await api.employess.search_employee(name_employee, page);\n    dispatch({\n      type: 'FILTER_EMPLOYEE',\n      payload: search\n    });\n  } catch (error) {\n    console.log({\n      error\n    });\n  }\n};","map":{"version":3,"sources":["/Users/felipebarraza/Desktop/ui_crm/src/actions/employess.js"],"names":["React","api","Modal","notification","Descriptions","DeleteOutlined","UserOutlined","viewPerson","person","info","title","name","icon","color","content","marginTop","enterprise","charge","email","phone_number","okText","width","getTotals","dispatch","employee","employess","get_totals_employees","type","payload","error","console","log","getPersons","page","get_employess","id","data","getEnterprises","enterprises","get_enterprises","deletePerson","confirm","okType","cancelType","onOk","delete_employee","status","open","message","description","updatePerson","update_employee","createPerson","create_employee","visibleModalForm","visibleModalUpdateForm","searchEmployee","name_employee","search","search_employee"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport api from '../api/endpoints'\nimport { Modal, notification, Descriptions } from 'antd'\nimport { DeleteOutlined, UserOutlined } from '@ant-design/icons';\n\nexport const viewPerson = (person) => {\n    Modal.info({\n        title:<>\n            {person.name} \n            </>,\n        icon: <UserOutlined style={{ color: '#1890ff'}}/>,\n        content: <>                        \n            <Descriptions title={'Datos'} bordered style={{marginTop:'20px'}}>\n                <Descriptions.Item label=\"Empresa\" span={3}>\n                    {person.enterprise}\n                </Descriptions.Item>\n            \n                <Descriptions.Item label=\"Cargo\" span={3}>\n                    {person.charge}\n                </Descriptions.Item>\n            \n                <Descriptions.Item label=\"Email\" span={3}>\n                    {person.email}\n                </Descriptions.Item>\n            \n                <Descriptions.Item label=\"Telefono\" span={3}>\n                    {person.phone_number}\n                </Descriptions.Item>\n            </Descriptions>\n        </>,\n        okText: 'OK',\n        width: '900px'      \n    })\n\n}\n\nexport const getTotals = async(dispatch) =>{\n    try{\n        const employee = await api.employess.get_totals_employees()\n\n        dispatch({\n            type: 'GET_TOTALS',\n            payload: employee\n        })\n\n    }catch(error){\n        console.log(error)\n    }\n}\n\nexport const getPersons = async(dispatch, page, enterprise) =>{\n  \n    dispatch({type: 'LOADING_TABLE'})\n\n    try{\n\n        const employess = await api.employess.get_employess(page, null, enterprise.id)\n        dispatch({\n            type: 'GET_PERSONS',\n            payload: employess.data,\n            enterprise: enterprise, \n            page:page\n             \n        })\n\n    }catch(error){\n        console.log({error})\n    }\n}\n\nexport const getEnterprises = async(dispatch, page)=>{        \n    dispatch({type:'LOADING_CARDS'})\n    try{    \n            \n        const enterprises = await api.enterprises.get_enterprises(page)        \n    \n        dispatch({\n            type: 'GET_ENTERPRISES',\n            payload: enterprises\n        })\n\n    }catch(error){\n\n    }\n}\n\nexport const deletePerson = async(dispatch, person, page, enterprise) =>{\n    try{\n        Modal.confirm({\n            title:`Eliminar Persona`,\n            icon: <DeleteOutlined style={{ color: 'red'}}/>,\n            content: `Estas seguro de eliminar a ${person.name}, una vez eliminada no podrÃ¡s recuperar este registro`,\n            okText: 'ELIMINAR',\n            okType: 'danger',\n            cancelType: 'danger',\n            width: '600px',\n            onOk: async() =>{                \n               const data = await api.employess.delete_employee(person.id)\n               if(data.status){\n                notification.open({\n                    message: `Persona Eliminada!`,\n                    description: `${person.name} fue eliminado`,\n                    icon: <DeleteOutlined style={{ color: '#red'}} />\n                })\n               }\n               getPersons(dispatch, page, enterprise)\n            }         \n        })\n        \n    }catch(error){\n        console.log(error)\n    }\n}\n\nexport const updatePerson = async(dispatch, person, page, enterprise, data) =>{\n    try{        \n        const employee = await api.employess.update_employee(person.id, data)\n        if(employee.status){\n            notification.open({\n                message: `Persona Actualizada!`,\n                description: `${person.name} fue actualiado`,\n                icon: <UserOutlined />\n            })\n            dispatch({\n                type:'OFF_MODAL_UPDATE'\n            })\n            getPersons(dispatch, page, enterprise)\n            getTotals(dispatch)\n            \n        }\n    }catch(error){\n        console.log({error})\n    }\n}\n\nexport const createPerson = async(dispatch, data, enterprise, page)=>{\n    \n    data = {\n        ...data,\n        \"enterprise\": enterprise.id\n        \n    }\n    try{\n        \n        const person = await api.employess.create_employee(data)    \n        if(person.status){\n            notification.open({\n                message: 'Persona creada!',\n                description: `${data.name} fue creado`,\n                icon: <UserOutlined />\n            })\n            dispatch({type:'OFF_MODAL_CREATE'})\n            getPersons(dispatch, page, enterprise)\n            getTotals(dispatch)\n        }\n    }catch(error){\n        console.log({error})\n        dispatch({\n            type:'ERROR',\n            payload: {error}\n        })\n    }\n}\n\nexport const visibleModalForm = (dispatch, enterprise) => {    \n    dispatch({\n        type: 'VISIBLE_MODAL_CREATE',\n        enterprise: enterprise\n    })\n}\n\nexport const visibleModalUpdateForm = (dispatch, person) =>{\n    dispatch({\n        type:'VISIBLE_MODAL_UPDATE',\n        person: person\n    })\n}\n\nexport const searchEmployee = async(dispatch, name_employee, page) =>{\n\n    try{\n        const search = await api.employess.search_employee(name_employee, page)        \n        dispatch({type:'FILTER_EMPLOYEE', payload:search})\n    }catch(error){\n        console.log({error})\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}