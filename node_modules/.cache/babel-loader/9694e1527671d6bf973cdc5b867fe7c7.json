{"ast":null,"code":"var _jsxFileName = \"/Users/felipebarraza/Desktop/ui_crm/src/components/tasks/Tasks.js\";\n//React\nimport React, { useReducer, useEffect } from 'react'; //Antd\n\nimport { Spin, Row, Col, Button, Tooltip, Alert } from 'antd';\nimport { BookFilled, AlertFilled, WarningFilled, CheckCircleFilled, SyncOutlined } from '@ant-design/icons'; //Components\n\nimport Totals from './Totals';\nimport TableTasks from './TableTasks';\nimport FormTask from './FormTask';\nimport FormTypeTasks from './FormTypeTasks';\nimport FilterDateTasks from './FilterDateTasks';\nimport FilterEnterprise from './FilterEnterprise';\nimport FilterPerson from './FilterPerson'; //Reducers\n\nimport { reducer } from '../../reducers/tasks'; //Actions\n\nimport { paginationTotals, paginationActives, paginationPriorities, paginationCompletes, reloadTasks } from '../../actions/tasks';\n\nconst Tasks = () => {\n  const initialState = {\n    totals: null,\n    loading: false,\n    totalsData: null,\n    activesData: null,\n    priorityData: null,\n    completesData: null,\n    pageTotals: 1,\n    pageActives: 1,\n    pagePriority: 1,\n    pageCompletes: 1,\n    loadingTotals: false,\n    loadingActives: false,\n    loadingPriority: false,\n    loadingCompletes: false,\n    countTotals: 0,\n    countActives: 0,\n    countPriority: 0,\n    countCompletes: 0,\n    date_range: {\n      start_date: '',\n      end_date: ''\n    },\n    year: '',\n    month: '',\n    day: '',\n    filter_enterperises: null,\n    filter_persons: null,\n    id_enterprise_selected: '',\n    id_person_selected: ''\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    dispatch({\n      type: 'LOADING'\n    });\n    reloadTasks(dispatch, {\n      totals: 1,\n      actives: 1,\n      priorities: 1,\n      completes: 1\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, state.loading ? /*#__PURE__*/React.createElement(Spin, {\n    size: \"large\",\n    style: {\n      marginLeft: '40%',\n      marginTop: '15%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 30\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Totals, {\n    totals: state.totals,\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 7,\n    style: {\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FilterDateTasks, {\n    dispatch: dispatch,\n    state: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 22\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 6,\n    style: {\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FilterEnterprise, {\n    dispatch: dispatch,\n    state: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 6,\n    style: {\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FilterPerson, {\n    dispatch: dispatch,\n    state: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 3,\n    style: {\n      marginLeft: '80px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Actualizar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"link\",\n    shape: \"circle\",\n    onClick: () => {\n      dispatch({\n        type: 'LOADING_TABLES'\n      });\n      dispatch({\n        type: 'CLEAN_RANGE_DATE'\n      });\n      reloadTasks(dispatch, {\n        totals: 1,\n        actives: 1,\n        priorities: 1,\n        completes: 1\n      });\n    },\n    style: {\n      marginRight: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(SyncOutlined, {\n    style: {\n      fontSize: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(FormTask, {\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormTypeTasks, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginBottom: '',\n      marginTop: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, state.date_range.start_date && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Alert, {\n    message: `Datos filtranos desde ${state.date_range.start_date} a ${state.date_range.end_date}`,\n    type: \"success\",\n    onClose: () => {\n      dispatch({\n        type: 'CLEAN_RANGE_DATE'\n      });\n      dispatch({\n        type: 'LOADING_TABLES'\n      });\n      reloadTasks(dispatch, {\n        totals: 1,\n        actives: 1,\n        priorities: 1,\n        completes: 1\n      });\n    },\n    showIcon: true,\n    closable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  })), state.year && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Alert, {\n    message: `FILTRO: ${state.year} / ${state.month} / ${state.day} `,\n    type: \"success\",\n    onClose: () => {\n      dispatch({\n        type: 'CLEAN_RANGE_DATE'\n      });\n      dispatch({\n        type: 'LOADING_TABLES'\n      });\n      reloadTasks(dispatch, {\n        totals: 1,\n        actives: 1,\n        priorities: 1,\n        completes: 1\n      });\n    },\n    showIcon: true,\n    closable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableTasks, {\n    dispatch: dispatch,\n    title: 'Tareas totales',\n    data: state.totalsData,\n    icon: /*#__PURE__*/React.createElement(BookFilled, {\n      style: {\n        color: '#1890ff',\n        float: 'right',\n        fontSize: '25px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 31\n      }\n    }),\n    count: state.countTotals,\n    loading: state.loadingTotals,\n    pagination: paginationTotals,\n    state: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableTasks, {\n    dispatch: dispatch,\n    title: 'Tareas activas',\n    data: state.activesData,\n    icon: /*#__PURE__*/React.createElement(AlertFilled, {\n      style: {\n        color: 'orange',\n        float: 'right',\n        fontSize: '25px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 31\n      }\n    }),\n    count: state.countActives,\n    loading: state.loadingActives,\n    pagination: paginationActives,\n    state: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableTasks, {\n    dispatch: dispatch,\n    title: 'Tareas prioritarias',\n    data: state.priorityData,\n    icon: /*#__PURE__*/React.createElement(WarningFilled, {\n      style: {\n        color: 'red',\n        float: 'right',\n        fontSize: '25px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 31\n      }\n    }),\n    count: state.countPriority,\n    loading: state.loadingPriority,\n    pagination: paginationPriorities,\n    state: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableTasks, {\n    dispatch: dispatch,\n    title: 'Tareas completadas',\n    data: state.completesData,\n    icon: /*#__PURE__*/React.createElement(CheckCircleFilled, {\n      style: {\n        color: 'green',\n        float: 'right',\n        fontSize: '25px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 31\n      }\n    }),\n    count: state.countCompletes,\n    loading: state.loadingCompletes,\n    pagination: paginationCompletes,\n    state: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  })))));\n};\n\nexport default Tasks;","map":{"version":3,"sources":["/Users/felipebarraza/Desktop/ui_crm/src/components/tasks/Tasks.js"],"names":["React","useReducer","useEffect","Spin","Row","Col","Button","Tooltip","Alert","BookFilled","AlertFilled","WarningFilled","CheckCircleFilled","SyncOutlined","Totals","TableTasks","FormTask","FormTypeTasks","FilterDateTasks","FilterEnterprise","FilterPerson","reducer","paginationTotals","paginationActives","paginationPriorities","paginationCompletes","reloadTasks","Tasks","initialState","totals","loading","totalsData","activesData","priorityData","completesData","pageTotals","pageActives","pagePriority","pageCompletes","loadingTotals","loadingActives","loadingPriority","loadingCompletes","countTotals","countActives","countPriority","countCompletes","date_range","start_date","end_date","year","month","day","filter_enterperises","filter_persons","id_enterprise_selected","id_person_selected","state","dispatch","type","actives","priorities","completes","marginLeft","marginTop","marginRight","fontSize","marginBottom","color","float"],"mappings":"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","sourcesContent":["//React\nimport React, { useReducer, useEffect } from 'react'\n\n//Antd\nimport { Spin, Row, Col, Button, Tooltip, Alert } from 'antd'\nimport { BookFilled, AlertFilled, WarningFilled, CheckCircleFilled,\n    SyncOutlined } from '@ant-design/icons'\n\n//Components\nimport Totals from './Totals'\nimport TableTasks from './TableTasks'\nimport FormTask from './FormTask'\nimport FormTypeTasks from './FormTypeTasks'\nimport FilterDateTasks from './FilterDateTasks'\nimport FilterEnterprise from './FilterEnterprise'\nimport FilterPerson from './FilterPerson'\n\n//Reducers\nimport { reducer } from '../../reducers/tasks'\n\n//Actions\nimport { paginationTotals, paginationActives, paginationPriorities, paginationCompletes, reloadTasks } from '../../actions/tasks'\n\n\nconst Tasks = () =>{\n    \n    const initialState ={\n\n        totals: null,\n        loading: false,\n        \n        totalsData: null,\n        activesData: null,\n        priorityData: null,\n        completesData: null,\n\n        pageTotals: 1,\n        pageActives: 1,\n        pagePriority: 1,\n        pageCompletes: 1,\n\n        loadingTotals: false,\n        loadingActives: false,\n        loadingPriority: false,\n        loadingCompletes: false,\n\n        countTotals: 0,\n        countActives: 0,\n        countPriority: 0,\n        countCompletes: 0,\n        \n        date_range:{\n            start_date:'',\n            end_date:''\n        },\n\n        year:'',\n        month:'',\n        day:'',\n            \n        filter_enterperises:null,\n        filter_persons:null,\n        id_enterprise_selected:'',\n        id_person_selected:''\n        \n    }\n\n    const [state, dispatch] = useReducer(reducer, initialState)\n\n    useEffect(() => {\n        dispatch({type:'LOADING'})\n        reloadTasks(dispatch, {totals:1, actives:1, priorities:1, completes:1})\n    }, [])\n\n    return(\n        <React.Fragment>\n            \n            {state.loading ? <Spin size=\"large\" style={{ marginLeft:'40%', marginTop:'15%'}} />:\n            <>\n            \n            <Totals totals={state.totals} dispatch={dispatch} />\n            \n\n            <Row style={{marginTop:'20px'}}>\n                <Col span={7} style={{marginRight:'10px'}}>\n\n                     <FilterDateTasks dispatch={dispatch} state={state} />\n\n                </Col>\n                <Col span={6} style={{marginRight:'10px'}}>\n                    \n                    <FilterEnterprise dispatch={dispatch} state={state} />\n                     \n                </Col>\n                <Col span={6} style={{marginRight:'10px'}}>\n\n                    <FilterPerson dispatch={dispatch} state={state} />         \n\n                </Col>\n                <Col span={3} style={{marginLeft:'80px'}}>                     \n                <Tooltip  title=\"Actualizar\">\n                        <Button type=\"link\" shape=\"circle\"\n                            onClick={()=>{\n                                dispatch({type:'LOADING_TABLES'})\n                                dispatch({type:'CLEAN_RANGE_DATE'})\n                                reloadTasks(dispatch, {totals:1, actives:1, priorities:1, completes:1})\n\n                            }}\n                            style={{marginRight:'20px'}}\n                        >\n                            <SyncOutlined style={{fontSize:'30px'}} />\n                        </Button>\n                    </Tooltip>\n                   \n                    \n                    <FormTask dispatch={dispatch} />                                        \n                    <FormTypeTasks />\n                    \n                </Col>\n            </Row>\n\n            <Row style={{marginBottom:'',marginTop:'15px'}}>\n                {state.date_range.start_date && <>\n                    <Alert \n                        message={`Datos filtranos desde ${state.date_range.start_date} a ${state.date_range.end_date}`} \n                        type=\"success\"\n                        onClose={() => {\n                            dispatch({type:'CLEAN_RANGE_DATE'})\n                            dispatch({type:'LOADING_TABLES'})\n                            reloadTasks(dispatch, {totals:1, actives:1, priorities:1, completes:1})\n                            }\n                        } \n                        showIcon \n                        closable />\n                </>}\n                {state.year && <>\n                    <Alert \n                        message={`FILTRO: ${state.year} / ${state.month} / ${state.day} `} \n                        type=\"success\"\n                        onClose={() => {\n                            dispatch({type:'CLEAN_RANGE_DATE'})\n                            dispatch({type:'LOADING_TABLES'})\n                            reloadTasks(dispatch, {totals:1, actives:1, priorities:1, completes:1})\n                            }\n                        } \n                        showIcon \n                        closable />\n                </>}\n                \n\n            </Row>\n\n            <Row style={{marginTop:'20px'}}>\n                <Col span={6}>\n                    <TableTasks \n                        dispatch={dispatch}\n                        title={'Tareas totales'} \n                        data={state.totalsData} \n                        icon={<BookFilled style={{color:'#1890ff', float:'right', fontSize:'25px'}} />} \n                        count = {state.countTotals}\n                        loading={state.loadingTotals}\n                        pagination={paginationTotals}\n                        state={state}\n                    />\n                </Col>\n                <Col span={6}>\n                    <TableTasks\n                        dispatch={dispatch} \n                        title={'Tareas activas'} \n                        data={state.activesData}\n                        icon={<AlertFilled style={{color:'orange', float:'right', fontSize:'25px'}} />}\n                        count = {state.countActives}\n                        loading={state.loadingActives}\n                        pagination={paginationActives}\n                        state={state}\n                    />\n                </Col>\n                <Col span={6}>\n                    <TableTasks \n                        dispatch={dispatch}\n                        title={'Tareas prioritarias'} \n                        data={state.priorityData}\n                        icon={<WarningFilled style={{color:'red', float:'right', fontSize:'25px'}} />} \n                        count = {state.countPriority}\n                        loading={state.loadingPriority}\n                        pagination={paginationPriorities}\n                        state={state}\n                    />\n                </Col>\n                <Col span={6}>\n                    <TableTasks \n                        dispatch={dispatch}\n                        title={'Tareas completadas'} \n                        data={state.completesData}\n                        icon={<CheckCircleFilled style={{color:'green', float:'right', fontSize:'25px'}} />} \n                        count = {state.countCompletes}\n                        loading={state.loadingCompletes}\n                        pagination={paginationCompletes}\n                        state={state}\n                    />\n                </Col>\n            </Row>\n            </>\n\n            }\n        </React.Fragment>\n    )\n}\n\nexport default Tasks"]},"metadata":{},"sourceType":"module"}