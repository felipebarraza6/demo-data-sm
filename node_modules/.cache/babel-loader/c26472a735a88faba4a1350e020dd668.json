{"ast":null,"code":"var _jsxFileName = \"/Users/felipebarraza/Desktop/ui_crm/src/components/tasks/TableTasks.js\";\n//React\nimport React from 'react'; //Antd\n\nimport { Table, Typography, Button, Dropdown, Menu } from 'antd';\nimport { EyeOutlined, EditOutlined, DeleteOutlined, WarningFilled, WarningOutlined, CheckCircleOutlined, MenuOutlined } from '@ant-design/icons'; //Actions\n\nimport { deleteTask, finishTask, updateTaks, viewTask, updateTaskModal } from '../../actions/tasks';\nconst {\n  Text\n} = Typography;\n\nconst TableTasks = ({\n  dispatch,\n  data,\n  title,\n  icon,\n  count,\n  loading,\n  pagination,\n  state\n}) => {\n  const columns = [{\n    title: 'Tarea',\n    dataIndex: 'type_action'\n  }, {\n    title: 'Persona',\n    dataIndex: 'employee',\n    render: person => person ? person.name : ''\n  }, {\n    title: 'Empresa',\n    dataIndex: 'employee',\n    render: person => person ? person.enterprise : ''\n  }, {\n    render: person => /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      overlay: /*#__PURE__*/React.createElement(Menu, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Menu.Item, {\n        key: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"link\",\n        style: {\n          color: '#1890ff'\n        },\n        onClick: () => {\n          viewTask(person);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(EyeOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 57\n        }\n      }), \" Ver Tarea\")), !person.is_complete & !person.is_priority && /*#__PURE__*/React.createElement(Menu.Item, {\n        key: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"link\",\n        style: {\n          color: 'grey'\n        },\n        onClick: () => {\n          updateTaskModal(dispatch, person, state);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(EditOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 57\n        }\n      }), \" Editar\")), !person.is_priority & !person.is_complete && /*#__PURE__*/React.createElement(Menu.Item, {\n        key: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"link\",\n        style: {\n          color: 'orange'\n        },\n        onClick: () => {\n          updateTaks(person.id, dispatch, state, {\n            is_priority: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(WarningFilled, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 57\n        }\n      }), \" Agregar a prioridades\")), person.is_priority && /*#__PURE__*/React.createElement(Menu.Item, {\n        key: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"link\",\n        style: {\n          color: 'grey'\n        },\n        onClick: () => {\n          updateTaks(person.id, dispatch, state, {\n            is_priority: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(WarningOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 53\n        }\n      }), \" Quitar de prioridades\")), !person.is_complete && /*#__PURE__*/React.createElement(Menu.Item, {\n        key: \"5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"link\",\n        style: {\n          color: 'green'\n        },\n        onClick: () => {\n          finishTask(dispatch, person.id, state);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(CheckCircleOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 57\n        }\n      }), \" Completar\")), !person.is_priority & !person.is_complete && /*#__PURE__*/React.createElement(Menu.Item, {\n        key: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        style: {\n          color: \"red\"\n        },\n        type: \"link\",\n        onClick: () => {\n          deleteTask(person.id, state, dispatch);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 57\n        }\n      }), \" Eliminar\"))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(MenuOutlined, {\n      style: {\n        fontSize: '16px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 45\n      }\n    }))))\n  }];\n  return /*#__PURE__*/React.createElement(Table, {\n    loading: loading,\n    style: {\n      margin: '2px'\n    },\n    title: () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {\n      strong: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 28\n      }\n    }, title), \" (\", count, \") \", icon),\n    columns: columns,\n    dataSource: data,\n    rowKey: \"id\",\n    pagination: {\n      simple: true,\n      total: count,\n      onChange: page => pagination(dispatch, page, state)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default TableTasks;","map":{"version":3,"sources":["/Users/felipebarraza/Desktop/ui_crm/src/components/tasks/TableTasks.js"],"names":["React","Table","Typography","Button","Dropdown","Menu","EyeOutlined","EditOutlined","DeleteOutlined","WarningFilled","WarningOutlined","CheckCircleOutlined","MenuOutlined","deleteTask","finishTask","updateTaks","viewTask","updateTaskModal","Text","TableTasks","dispatch","data","title","icon","count","loading","pagination","state","columns","dataIndex","render","person","name","enterprise","color","is_complete","is_priority","id","fontSize","margin","simple","total","onChange","page"],"mappings":"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","sourcesContent":["//React\nimport React from 'react'\n\n//Antd\nimport { Table, Typography, Button, Dropdown, Menu } from 'antd'\nimport { EyeOutlined, EditOutlined, DeleteOutlined,\n        WarningFilled, WarningOutlined, CheckCircleOutlined, \n        MenuOutlined } from '@ant-design/icons'\n\n//Actions\nimport { deleteTask, finishTask, updateTaks, viewTask, updateTaskModal } from '../../actions/tasks'\n\nconst { Text } = Typography;\n\nconst TableTasks = ({ dispatch, data, title, icon, count, loading, pagination, state }) =>{\n    \n    const columns = [\n        {\n            title: 'Tarea',\n            dataIndex: 'type_action'\n        },\n        {\n            title: 'Persona',\n            dataIndex: 'employee',\n            render: (person) => person ? person.name : ''\n        },\n        {\n            title: 'Empresa',\n            dataIndex: 'employee',\n            render: (person) => person ? person.enterprise : ''\n        },\n        {\n            render: (person) => <React.Fragment>\n                                    <Dropdown \n                                        overlay={ \n                                            <Menu >\n                                                <Menu.Item key=\"2\">\n                                                    <Button type=\"link\" style={{color:'#1890ff'}} onClick={()=>{viewTask(person)}}>\n                                                        <EyeOutlined/> Ver Tarea\n                                                    </Button>\n                                                </Menu.Item>\n\n                                                {!person.is_complete & !person.is_priority &&\n                                                <Menu.Item key=\"1\">\n                                                    <Button type=\"link\" style={{color:'grey'}} onClick={() =>{updateTaskModal(dispatch, person, state)}}>\n                                                        <EditOutlined/> Editar\n                                                    </Button>\n                                                </Menu.Item>\n                                                }\n\n                                                {!person.is_priority & !person.is_complete &&\n                                                <Menu.Item key=\"3\">\n                                                    <Button type=\"link\" style={{color:'orange'}} onClick={() =>{updateTaks(person.id, dispatch, state, {is_priority:true})}}>\n                                                        <WarningFilled/> Agregar a prioridades\n                                                    </Button>\n                                                </Menu.Item>\n                                                }\n\n                                                {person.is_priority &&\n                                                <Menu.Item key=\"4\">\n                                                    <Button type=\"link\" style={{color:'grey'}} onClick={() =>{updateTaks(person.id, dispatch, state, {is_priority:false})}}>\n                                                    <WarningOutlined/> Quitar de prioridades\n                                                </Button>\n                                            </Menu.Item>\n                                                }\n\n                                                {!person.is_complete &&\n                                                    <Menu.Item key=\"5\">\n                                                    <Button type=\"link\" style={{color:'green'}} onClick={() => { finishTask(dispatch, person.id, state)}} >\n                                                        <CheckCircleOutlined/> Completar\n                                                    </Button>\n                                                </Menu.Item>\n                                                }\n                                                \n                                                {!person.is_priority & !person.is_complete &&\n                                                <Menu.Item key=\"6\">\n                                                    <Button style={{color:\"red\"}} type=\"link\" onClick={() => { deleteTask(person.id, state, dispatch) }}>\n                                                        <DeleteOutlined/> Eliminar\n                                                    </Button>\n                                                </Menu.Item>\n                                                }\n                                            </Menu>}\n                                    >\n                                        <Button type=\"link\">\n                                            <MenuOutlined style={{fontSize:'16px'}} />\n                                        </Button>\n                                    </Dropdown>\n                                </React.Fragment>\n        }\n    ]\n\n    return (\n        <Table \n            \n            loading={loading}\n            style={{margin:'2px'}}\n            title={() => <><Text strong>{title}</Text> ({count}) {icon}</>}\n            columns={columns}\n            dataSource={data}\n            rowKey='id'\n            pagination={{\n                simple:true,\n                total: count,\n                onChange: (page) => pagination(dispatch, page, state)\n            }}\n        />\n    )\n\n}\n\nexport default TableTasks\n\n\n\n"]},"metadata":{},"sourceType":"module"}