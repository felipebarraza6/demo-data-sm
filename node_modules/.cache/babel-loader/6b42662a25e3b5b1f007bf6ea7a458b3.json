{"ast":null,"code":"var _jsxFileName = \"/Users/felipebarraza/Desktop/ui_crm/src/components/tasks/FilterDateTasks.js\";\nimport React, { useState } from 'react';\nimport { DatePicker, Card, Button, Switch, Tooltip, Typography, Collapse, Form } from 'antd';\nimport { FilterOutlined, CalendarTwoTone } from '@ant-design/icons';\nimport moment from 'moment';\nimport { reloadTasks } from '../../actions/tasks';\nconst {\n  RangePicker\n} = DatePicker;\nconst {\n  Text\n} = Typography;\nconst {\n  Panel\n} = Collapse;\n\nconst FilterDateTasks = attr => {\n  const [state, setState] = useState({\n    range_date: true,\n    range_year: false,\n    range_month: false,\n    only_date: false,\n    only_year: false,\n    year_mounth: false\n  });\n  return /*#__PURE__*/React.createElement(Collapse, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    header: /*#__PURE__*/React.createElement(React.Fragment, null, \"FECHAS\", /*#__PURE__*/React.createElement(CalendarTwoTone, {\n      style: {\n        float: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 32\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    bordered: false,\n    title: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Switch, {\n      checked: state.range_date,\n      onChange: value => setState({\n        range_date: true\n      }),\n      size: \"small\",\n      style: {\n        marginRight: '3px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      type: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, \"Rangos\"), /*#__PURE__*/React.createElement(Switch, {\n      checked: state.only_date,\n      onChange: value => setState({\n        only_date: true\n      }),\n      size: \"small\",\n      style: {\n        marginRight: '3px',\n        marginLeft: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      type: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, \"D\\xEDa\"), /*#__PURE__*/React.createElement(Switch, {\n      checked: state.only_year,\n      onChange: value => setState({\n        only_year: true\n      }),\n      size: \"small\",\n      style: {\n        marginRight: '3px',\n        marginLeft: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      type: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, \"A\\xF1o\"), /*#__PURE__*/React.createElement(Switch, {\n      checked: state.year_mounth,\n      onChange: value => setState({\n        year_mounth: true\n      }),\n      size: \"small\",\n      style: {\n        marginRight: '3px',\n        marginLeft: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      type: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, \"A\\xF1o y mes\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, state.range_date && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    name: \"range\",\n    onFinish: values => {\n      values = { ...values,\n        'range_date': {\n          0: moment(values.range_date[0]).format('YYYY-MM-DD'),\n          1: moment(values.range_date[1]).format('YYYY-MM-DD')\n        }\n      };\n      reloadTasks(attr.dispatch, {\n        totals: 1,\n        actives: 1,\n        priorities: 1,\n        completes: 1\n      }, {\n        start_date: values.range_date[0],\n        end_date: values.range_date[1]\n      });\n    },\n    layout: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"range_date\",\n    style: {\n      width: '80%'\n    },\n    rules: [{\n      required: true,\n      message: 'Ingresa en rango de fechas para utilizar el filtro'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RangePicker, {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Filtrar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    type: \"primary\",\n    shape: \"circle\",\n    style: {\n      marginLeft: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FilterOutlined, {\n    style: {\n      fontSize: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }))))), state.only_date && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    name: \"date\",\n    onFinish: values => {\n      values = { ...values,\n        'year': moment(values.date).format('YYYY'),\n        'month': moment(values.date).format('MM'),\n        'day': moment(values.date).format('DD')\n      };\n      reloadTasks(attr.dispatch, {\n        totals: 1,\n        actives: 1,\n        priorities: 1,\n        completes: 1\n      }, {}, values.year, values.month, values.day);\n    },\n    layout: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"date\",\n    style: {\n      width: '80%'\n    },\n    rules: [{\n      required: true,\n      message: 'Ingresa la fecha'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Filtrar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    type: \"primary\",\n    shape: \"circle\",\n    style: {\n      marginLeft: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FilterOutlined, {\n    style: {\n      fontSize: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }))))), state.only_year && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    name: \"date\",\n    onFinish: values => {\n      values = { ...values,\n        'year': moment(values.year).format('YYYY')\n      };\n      reloadTasks(attr.dispatch, {\n        totals: 1,\n        actives: 1,\n        priorities: 1,\n        completes: 1\n      }, {}, values.year);\n    },\n    layout: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"year\",\n    style: {\n      width: '80%'\n    },\n    rules: [{\n      required: true,\n      message: 'Ingresa la fecha'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    picker: 'year',\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Filtrar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    type: \"primary\",\n    shape: \"circle\",\n    style: {\n      marginLeft: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FilterOutlined, {\n    style: {\n      fontSize: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }))))), state.year_mounth && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    name: \"date\",\n    onFinish: values => {\n      values = { ...values,\n        'year': moment(values.year_month).format('YYYY'),\n        'month': moment(values.year_month).format('MM')\n      };\n      reloadTasks(attr.dispatch, {\n        totals: 1,\n        actives: 1,\n        priorities: 1,\n        completes: 1\n      }, {}, values.year, values.month);\n    },\n    layout: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"year_month\",\n    style: {\n      width: '80%'\n    },\n    rules: [{\n      required: true,\n      message: 'Ingresa la fecha'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    picker: \"month\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Filtrar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    type: \"primary\",\n    shape: \"circle\",\n    style: {\n      marginLeft: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FilterOutlined, {\n    style: {\n      fontSize: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  }))))))));\n};\n\nexport default FilterDateTasks;","map":{"version":3,"sources":["/Users/felipebarraza/Desktop/ui_crm/src/components/tasks/FilterDateTasks.js"],"names":["React","useState","DatePicker","Card","Button","Switch","Tooltip","Typography","Collapse","Form","FilterOutlined","CalendarTwoTone","moment","reloadTasks","RangePicker","Text","Panel","FilterDateTasks","attr","state","setState","range_date","range_year","range_month","only_date","only_year","year_mounth","float","value","marginRight","marginLeft","values","format","dispatch","totals","actives","priorities","completes","start_date","end_date","width","required","message","fontSize","date","year","month","day","year_month"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,MAA3B,EAAmCC,MAAnC,EAA2CC,OAA3C,EAAoDC,UAApD,EAAgEC,QAAhE,EAA0EC,IAA1E,QAAsF,MAAtF;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,mBAAhD;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAAQC,WAAR,QAA0B,qBAA1B;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAkBZ,UAAxB;AACA,MAAM;AAAEa,EAAAA;AAAF,IAAWR,UAAjB;AACA,MAAM;AAAES,EAAAA;AAAF,IAAYR,QAAlB;;AAEA,MAAMS,eAAe,GAAIC,IAAD,IAAS;AAE7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC;AAE/BoB,IAAAA,UAAU,EAAC,IAFoB;AAG/BC,IAAAA,UAAU,EAAC,KAHoB;AAI/BC,IAAAA,WAAW,EAAC,KAJmB;AAM/BC,IAAAA,SAAS,EAAC,KANqB;AAO/BC,IAAAA,SAAS,EAAC,KAPqB;AAQ/BC,IAAAA,WAAW,EAAC;AARmB,GAAD,CAAlC;AAYA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAO,IAAA,MAAM,eAAE,iEAAQ,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,IAAD;AACA,IAAA,QAAQ,EAAE,KADV;AAEA,IAAA,KAAK,eACD,uDACR,oBAAC,MAAD;AACI,MAAA,OAAO,EAAER,KAAK,CAACE,UADnB;AAEI,MAAA,QAAQ,EACHO,KAAD,IAAUR,QAAQ,CAAC;AAACC,QAAAA,UAAU,EAAC;AAAZ,OAAD,CAH1B;AAKI,MAAA,IAAI,EAAC,OALT;AAMI,MAAA,KAAK,EAAE;AAACQ,QAAAA,WAAW,EAAC;AAAb,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADQ,eAQA,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARA,eAYR,oBAAC,MAAD;AACI,MAAA,OAAO,EAAEV,KAAK,CAACK,SADnB;AAEI,MAAA,QAAQ,EAAGI,KAAD,IAAUR,QAAQ,CAAC;AAACI,QAAAA,SAAS,EAAC;AAAX,OAAD,CAFhC;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,KAAK,EAAE;AAACK,QAAAA,WAAW,EAAC,KAAb;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZQ,eAiBA,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBA,eAmBR,oBAAC,MAAD;AACI,MAAA,OAAO,EAAEX,KAAK,CAACM,SADnB;AAEI,MAAA,QAAQ,EAAGG,KAAD,IAAUR,QAAQ,CAAC;AAACK,QAAAA,SAAS,EAAC;AAAX,OAAD,CAFhC;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,KAAK,EAAE;AAACI,QAAAA,WAAW,EAAC,KAAb;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBQ,eAwBA,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBA,eA0BR,oBAAC,MAAD;AACI,MAAA,OAAO,EAAEX,KAAK,CAACO,WADnB;AAEI,MAAA,QAAQ,EAAGE,KAAD,IAAUR,QAAQ,CAAC;AAACM,QAAAA,WAAW,EAAC;AAAb,OAAD,CAFhC;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,KAAK,EAAE;AAACG,QAAAA,WAAW,EAAC,KAAb;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BQ,eA+BA,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA/BA,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAyCHX,KAAK,CAACE,UAAN,iBAAoB,uDACrB,oBAAC,IAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,QAAQ,EAAKU,MAAD,IAAY;AACpBA,MAAAA,MAAM,GAAG,EACL,GAAGA,MADE;AAEL,sBAAa;AACT,aAAGnB,MAAM,CAACmB,MAAM,CAACV,UAAP,CAAkB,CAAlB,CAAD,CAAN,CAA6BW,MAA7B,CAAoC,YAApC,CADM;AAET,aAAGpB,MAAM,CAACmB,MAAM,CAACV,UAAP,CAAkB,CAAlB,CAAD,CAAN,CAA6BW,MAA7B,CAAoC,YAApC;AAFM;AAFR,OAAT;AAQAnB,MAAAA,WAAW,CACHK,IAAI,CAACe,QADF,EAEH;AACIC,QAAAA,MAAM,EAAC,CADX;AAEIC,QAAAA,OAAO,EAAC,CAFZ;AAGIC,QAAAA,UAAU,EAAC,CAHf;AAIIC,QAAAA,SAAS,EAAC;AAJd,OAFG,EAQH;AACIC,QAAAA,UAAU,EAACP,MAAM,CAACV,UAAP,CAAkB,CAAlB,CADf;AAEIkB,QAAAA,QAAQ,EAACR,MAAM,CAACV,UAAP,CAAkB,CAAlB;AAFb,OARG,CAAX;AAaH,KAxBL;AAyBI,IAAA,MAAM,EAAC,QAzBX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA4BI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAC,YAAhB;AAA6B,IAAA,KAAK,EAAE;AAACmB,MAAAA,KAAK,EAAC;AAAP,KAApC;AAAmD,IAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAE;AAACF,MAAAA,KAAK,EAAC;AAAP,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA5BJ,eAgCI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAA0B,IAAA,IAAI,EAAC,SAA/B;AAAyC,IAAA,KAAK,EAAC,QAA/C;AAAwD,IAAA,KAAK,EAAE;AAACV,MAAAA,UAAU,EAAC;AAAZ,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAE;AAACa,MAAAA,QAAQ,EAAC;AAAV,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAhCJ,CADqB,CAzCjB,EAkFHxB,KAAK,CAACK,SAAN,iBAAmB,uDACpB,oBAAC,IAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,QAAQ,EAAKO,MAAD,IAAY;AACpBA,MAAAA,MAAM,GAAG,EACL,GAAGA,MADE;AAEL,gBAAOnB,MAAM,CAACmB,MAAM,CAACa,IAAR,CAAN,CAAoBZ,MAApB,CAA2B,MAA3B,CAFF;AAGL,iBAAQpB,MAAM,CAACmB,MAAM,CAACa,IAAR,CAAN,CAAoBZ,MAApB,CAA2B,IAA3B,CAHH;AAIL,eAAMpB,MAAM,CAACmB,MAAM,CAACa,IAAR,CAAN,CAAoBZ,MAApB,CAA2B,IAA3B;AAJD,OAAT;AAOInB,MAAAA,WAAW,CACPK,IAAI,CAACe,QADE,EAEP;AACIC,QAAAA,MAAM,EAAC,CADX;AAEIC,QAAAA,OAAO,EAAC,CAFZ;AAGIC,QAAAA,UAAU,EAAC,CAHf;AAIIC,QAAAA,SAAS,EAAC;AAJd,OAFO,EAQP,EARO,EASPN,MAAM,CAACc,IATA,EAUPd,MAAM,CAACe,KAVA,EAWPf,MAAM,CAACgB,GAXA,CAAX;AAaH,KAvBT;AA0BI,IAAA,MAAM,EAAC,QA1BX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA4BA,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAC,MAAhB;AAAuB,IAAA,KAAK,EAAE;AAACP,MAAAA,KAAK,EAAC;AAAP,KAA9B;AAA6C,IAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAACF,MAAAA,KAAK,EAAC;AAAP,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA5BA,eA+BI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAA0B,IAAA,IAAI,EAAC,SAA/B;AAAyC,IAAA,KAAK,EAAC,QAA/C;AAAwD,IAAA,KAAK,EAAE;AAACV,MAAAA,UAAU,EAAC;AAAZ,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAE;AAACa,MAAAA,QAAQ,EAAC;AAAV,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CA/BJ,CADoB,CAlFhB,EAyHHxB,KAAK,CAACM,SAAN,iBAAmB,uDAChB,oBAAC,IAAD;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,QAAQ,EAAKM,MAAD,IAAY;AACpBA,MAAAA,MAAM,GAAG,EACL,GAAGA,MADE;AAEL,gBAAOnB,MAAM,CAACmB,MAAM,CAACc,IAAR,CAAN,CAAoBb,MAApB,CAA2B,MAA3B;AAFF,OAAT;AAIInB,MAAAA,WAAW,CACPK,IAAI,CAACe,QADE,EAEP;AACIC,QAAAA,MAAM,EAAC,CADX;AAEIC,QAAAA,OAAO,EAAC,CAFZ;AAGIC,QAAAA,UAAU,EAAC,CAHf;AAIIC,QAAAA,SAAS,EAAC;AAJd,OAFO,EAQP,EARO,EASPN,MAAM,CAACc,IATA,CAAX;AAWH,KAlBL;AAqBA,IAAA,MAAM,EAAC,QArBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAuBJ,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAC,MAAhB;AAAuB,IAAA,KAAK,EAAE;AAACL,MAAAA,KAAK,EAAC;AAAP,KAA9B;AAA6C,IAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAE,MAApB;AAA4B,IAAA,KAAK,EAAE;AAACF,MAAAA,KAAK,EAAC;AAAP,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAvBI,eA0BA,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAA0B,IAAA,IAAI,EAAC,SAA/B;AAAyC,IAAA,KAAK,EAAC,QAA/C;AAAwD,IAAA,KAAK,EAAE;AAACV,MAAAA,UAAU,EAAC;AAAZ,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAE;AAACa,MAAAA,QAAQ,EAAC;AAAV,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CA1BA,CADgB,CAzHhB,EA2JHxB,KAAK,CAACO,WAAN,iBAAqB,uDAClB,oBAAC,IAAD;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,QAAQ,EAAKK,MAAD,IAAY;AACpBA,MAAAA,MAAM,GAAG,EACL,GAAGA,MADE;AAEL,gBAAOnB,MAAM,CAACmB,MAAM,CAACiB,UAAR,CAAN,CAA0BhB,MAA1B,CAAiC,MAAjC,CAFF;AAGL,iBAAQpB,MAAM,CAACmB,MAAM,CAACiB,UAAR,CAAN,CAA0BhB,MAA1B,CAAiC,IAAjC;AAHH,OAAT;AAMInB,MAAAA,WAAW,CACPK,IAAI,CAACe,QADE,EAEP;AACIC,QAAAA,MAAM,EAAC,CADX;AAEIC,QAAAA,OAAO,EAAC,CAFZ;AAGIC,QAAAA,UAAU,EAAC,CAHf;AAIIC,QAAAA,SAAS,EAAC;AAJd,OAFO,EAQP,EARO,EASPN,MAAM,CAACc,IATA,EAUPd,MAAM,CAACe,KAVA,CAAX;AAYH,KArBL;AAwBA,IAAA,MAAM,EAAC,QAxBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA0BJ,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAC,YAAhB;AAA6B,IAAA,KAAK,EAAE;AAACN,MAAAA,KAAK,EAAC;AAAP,KAApC;AAAmD,IAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAC,OAAnB;AAA2B,IAAA,KAAK,EAAE;AAACF,MAAAA,KAAK,EAAC;AAAP,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA1BI,eA6BA,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAA0B,IAAA,IAAI,EAAC,SAA/B;AAAyC,IAAA,KAAK,EAAC,QAA/C;AAAwD,IAAA,KAAK,EAAE;AAACV,MAAAA,UAAU,EAAC;AAAZ,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAE;AAACa,MAAAA,QAAQ,EAAC;AAAV,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CA7BA,CADkB,CA3JlB,CADR,CADA,CADJ;AA0MH,CAxND;;AA0NA,eAAe1B,eAAf","sourcesContent":["import React, { useState } from 'react'\n\nimport { DatePicker, Card, Button, Switch, Tooltip, Typography, Collapse, Form } from 'antd'\nimport { FilterOutlined, CalendarTwoTone } from '@ant-design/icons'\n\nimport moment from 'moment'\n\nimport {reloadTasks} from '../../actions/tasks'\n\nconst { RangePicker } = DatePicker\nconst { Text } = Typography\nconst { Panel } = Collapse\n\nconst FilterDateTasks = (attr) =>{\n\n    const [state, setState] = useState({\n\n        range_date:true,\n        range_year:false,\n        range_month:false,\n\n        only_date:false,\n        only_year:false,\n        year_mounth:false\n    })\n\n\n    return(\n        <Collapse>\n        <Panel header={<>FECHAS<CalendarTwoTone style={{float: 'right'}} /></>}>\n                <Card\n                bordered={false}\n                title={\n                    <>\n            <Switch\n                checked={state.range_date} \n                onChange={\n                    (value)=> setState({range_date:true})\n                    } \n                size=\"small\" \n                style={{marginRight:'3px'}} /> \n                    <Text type=\"secondary\">\n                        Rangos\n                    </Text>\n\n            <Switch\n                checked={state.only_date}\n                onChange={(value)=> setState({only_date:true})} \n                size=\"small\" \n                style={{marginRight:'3px', marginLeft: '10px'}} /> \n                    <Text type=\"secondary\">Día</Text>\n\n            <Switch\n                checked={state.only_year}\n                onChange={(value)=> setState({only_year:true})} \n                size=\"small\" \n                style={{marginRight:'3px', marginLeft: '10px'}} /> \n                    <Text type=\"secondary\">Año</Text>\n\n            <Switch\n                checked={state.year_mounth}\n                onChange={(value)=> setState({year_mounth:true})} \n                size=\"small\" \n                style={{marginRight:'3px', marginLeft: '10px'}} /> \n                    <Text type=\"secondary\">Año y mes</Text>\n            </>\n                }\n                >\n\n               \n            \n            {state.range_date && <>\n            <Form\n                name=\"range\"\n                onFinish = {(values) => {\n                    values = {\n                        ...values,\n                        'range_date':{\n                            0: moment(values.range_date[0]).format('YYYY-MM-DD'),\n                            1: moment(values.range_date[1]).format('YYYY-MM-DD')\n                        }\n                    }\n\n                    reloadTasks(\n                            attr.dispatch, \n                            {\n                                totals:1, \n                                actives:1, \n                                priorities:1, \n                                completes:1\n                            }, \n                            {\n                                start_date:values.range_date[0], \n                                end_date:values.range_date[1]\n                            }\n                        ) \n                }}\n                layout=\"inline\"\n\n            >\n                <Form.Item name=\"range_date\" style={{width:'80%'}} rules={[{ required: true, message: 'Ingresa en rango de fechas para utilizar el filtro'}]}>\n                    <RangePicker style={{width:'100%'}} />\n                </Form.Item>\n                \n                <Tooltip title=\"Filtrar\">\n                    <Button htmlType=\"submit\" type=\"primary\" shape=\"circle\" style={{marginLeft:'20px'}}>\n                        <FilterOutlined style={{fontSize:'15px'}} />\n                    </Button>\n                </Tooltip>\n                \n            </Form>\n            </>}\n            {state.only_date && <>\n            <Form\n                name=\"date\"\n                onFinish = {(values) => {\n                    values = {\n                        ...values,\n                        'year':moment(values.date).format('YYYY'),\n                        'month':moment(values.date).format('MM'),\n                        'day':moment(values.date).format('DD')\n                        }\n\n                        reloadTasks(\n                            attr.dispatch, \n                            {\n                                totals:1, \n                                actives:1, \n                                priorities:1, \n                                completes:1\n                            }, \n                            {},\n                            values.year,\n                            values.month,\n                            values.day\n                        )\n                    }\n                    \n                }\n                layout=\"inline\"\n            >   \n            <Form.Item name=\"date\" style={{width:'80%'}} rules={[{ required: true, message: 'Ingresa la fecha'}]}>\n                <DatePicker style={{width:'100%'}} />\n            </Form.Item>                \n                <Tooltip title=\"Filtrar\">\n                    <Button htmlType=\"submit\" type=\"primary\" shape=\"circle\" style={{marginLeft:'20px'}}>\n                        <FilterOutlined style={{fontSize:'15px'}} />\n                    </Button>\n                </Tooltip>\n            </Form>\n            </>}\n            {state.only_year && <>\n                <Form\n                name=\"date\"\n                onFinish = {(values) => {\n                    values = {\n                        ...values,\n                        'year':moment(values.year).format('YYYY')\n                        }\n                        reloadTasks(\n                            attr.dispatch, \n                            {\n                                totals:1, \n                                actives:1, \n                                priorities:1, \n                                completes:1\n                            }, \n                            {},\n                            values.year\n                        )\n                    }\n                    \n                }\n                layout=\"inline\"\n            >   \n            <Form.Item name=\"year\" style={{width:'80%'}} rules={[{ required: true, message: 'Ingresa la fecha'}]}>\n                <DatePicker picker={'year'} style={{width:'100%'}} />\n            </Form.Item>                \n                <Tooltip title=\"Filtrar\">\n                    <Button htmlType=\"submit\" type=\"primary\" shape=\"circle\" style={{marginLeft:'20px'}}>\n                        <FilterOutlined style={{fontSize:'15px'}} />\n                    </Button>\n                </Tooltip>\n            </Form>\n            </>}\n            {state.year_mounth && <>\n                <Form\n                name=\"date\"\n                onFinish = {(values) => {\n                    values = {\n                        ...values,\n                        'year':moment(values.year_month).format('YYYY'),\n                        'month':moment(values.year_month).format('MM')\n                        }\n\n                        reloadTasks(\n                            attr.dispatch, \n                            {\n                                totals:1, \n                                actives:1, \n                                priorities:1, \n                                completes:1\n                            }, \n                            {},\n                            values.year,\n                            values.month\n                        )\n                    }\n                    \n                }\n                layout=\"inline\"\n            >   \n            <Form.Item name=\"year_month\" style={{width:'80%'}} rules={[{ required: true, message: 'Ingresa la fecha'}]}>\n                <DatePicker picker=\"month\" style={{width:'100%'}} />\n            </Form.Item>\n                <Tooltip title=\"Filtrar\">\n                    <Button htmlType=\"submit\" type=\"primary\" shape=\"circle\" style={{marginLeft:'20px'}}>\n                        <FilterOutlined style={{fontSize:'15px'}} />\n                    </Button>\n                </Tooltip>\n            </Form>\n            </>}\n            </Card>\n            </Panel>        \n                        \n            </Collapse>\n        \n    )\n    \n}\n\nexport default FilterDateTasks"]},"metadata":{},"sourceType":"module"}