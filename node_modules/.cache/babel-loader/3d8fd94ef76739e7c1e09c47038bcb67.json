{"ast":null,"code":"var _jsxFileName = \"/Users/felipebarraza/Desktop/ui_crm/src/components/clients/TableClients.js\";\nimport React from 'react';\nimport { Table, Button, Tooltip, Typography, Descriptions } from 'antd';\nimport { DeleteOutlined, EditOutlined, LikeOutlined, DislikeOutlined } from '@ant-design/icons';\nimport { deletePerson, getPersons, updatePerson, visibleModalUpdateForm } from '../../actions/employess';\nconst {\n  Text\n} = Typography;\n\nconst TableClients = attr => {\n  const columns = [{\n    title: 'Nombre',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: 'Acciones',\n    key: 'id',\n    render: person => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Editar persona\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"link\",\n      onClick: () => {\n        visibleModalUpdateForm(attr.dispatch, person);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(EditOutlined, {\n      style: {\n        color: '#1890ff'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 37\n      }\n    }))), person.is_active ? /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Establecer como inactivo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"link\",\n      onClick: () => {\n        updatePerson(attr.dispatch, person, attr.page, attr.enterprise, {\n          is_active: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(LikeOutlined, {\n      style: {\n        color: '#1890ff'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 37\n      }\n    }))) : /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Establecer como activo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"link\",\n      onClick: () => {\n        updatePerson(attr.dispatch, person, attr.page, attr.enterprise, {\n          is_active: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(DislikeOutlined, {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Eliminar persona\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        deletePerson(attr.dispatch, person, attr.page, attr.enterprise);\n      },\n      type: \"link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 37\n      }\n    }))))\n  }];\n\n  const expandedRowRender = person => {\n    return /*#__PURE__*/React.createElement(Descriptions, {\n      layout: \"vertical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Telefono\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, person.phone_number ? person.phone_number : 'S/D'), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Cargo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, person.charge ? person.charge : 'S/D'), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      label: \"Empresa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, person.enterprise ? person.enterprise : 'S/D'), /*#__PURE__*/React.createElement(Descriptions.Item, {\n      span: 3,\n      label: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, person.email ? person.email : 'S/D'));\n  };\n\n  return /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    dataSource: attr.data,\n    loading: attr.loading,\n    rowKey: \"id\",\n    title: () => /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, attr.enterprise ? /*#__PURE__*/React.createElement(Text, {\n      mark: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, attr.enterprise.name, \" (\", attr.quantity, \")\") : /*#__PURE__*/React.createElement(Text, {\n      mark: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 83\n      }\n    }, \"TODOS(\", attr.quantity, \")\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => getPersons(attr.dispatch, 1, ''),\n      style: {\n        float: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, \"TODOS\")),\n    pagination: {\n      total: attr.quantity,\n      simple: true,\n      current: attr.page,\n      onChange: page => {\n        getPersons(attr.dispatch, page, attr.enterprise);\n      }\n    },\n    expandable: {\n      expandedRowRender\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default TableClients;","map":{"version":3,"sources":["/Users/felipebarraza/Desktop/ui_crm/src/components/clients/TableClients.js"],"names":["React","Table","Button","Tooltip","Typography","Descriptions","DeleteOutlined","EditOutlined","LikeOutlined","DislikeOutlined","deletePerson","getPersons","updatePerson","visibleModalUpdateForm","Text","TableClients","attr","columns","title","dataIndex","key","render","person","dispatch","color","is_active","page","enterprise","expandedRowRender","phone_number","charge","email","data","loading","name","quantity","float","total","simple","current","onChange"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { Table, Button, Tooltip, Typography, Descriptions } from 'antd'\nimport { DeleteOutlined, EditOutlined , LikeOutlined, DislikeOutlined } from '@ant-design/icons'\n\nimport {deletePerson, getPersons, updatePerson, visibleModalUpdateForm } from '../../actions/employess'\n\nconst { Text } = Typography\n\nconst TableClients = (attr) =>{\n    \n    const columns = [        \n        \n        {\n            title:'Nombre',\n            dataIndex: 'name',\n            key: 'name'\n        },\n        {\n            title:'Acciones',\n            key: 'id',\n            render: (person) =>   <> \n                            <Tooltip title='Editar persona'>\n                                <Button type=\"link\" onClick={()=> {visibleModalUpdateForm(attr.dispatch, person)}}>\n                                    <EditOutlined style={{color:'#1890ff'}}/>\n                                </Button>\n                            </Tooltip>                                                        \n                            {person.is_active ? \n                            \n                            <Tooltip title='Establecer como inactivo'>\n                                <Button type=\"link\" onClick={() => {updatePerson(attr.dispatch, person, attr.page, attr.enterprise, {is_active: false})}} >\n                                    <LikeOutlined style={{color:'#1890ff'}}/>\n                                </Button>\n                            </Tooltip> :\n                            <Tooltip title='Establecer como activo'>\n                            <Button type=\"link\" onClick={() => {updatePerson(attr.dispatch, person, attr.page, attr.enterprise, {is_active: true})}} >\n                                <DislikeOutlined style={{color:'red'}}/>\n                            </Button>\n                            </Tooltip> \n                            }\n                            <Tooltip title='Eliminar persona'>\n                                <Button onClick={() => {deletePerson(attr.dispatch, person, attr.page, attr.enterprise)}} type=\"link\">\n                                    <DeleteOutlined style={{color:'red'}}/>\n                                </Button>\n                            </Tooltip>                             \n                            </>            \n        }\n    ]\n\n    const expandedRowRender = (person) => {\n        return(\n            <Descriptions layout=\"vertical\">                \n                <Descriptions.Item label=\"Telefono\">{person.phone_number ? person.phone_number : 'S/D'}</Descriptions.Item>\n                <Descriptions.Item label=\"Cargo\">{person.charge ? person.charge : 'S/D'}</Descriptions.Item>\n                <Descriptions.Item label=\"Empresa\">{person.enterprise ? person.enterprise : 'S/D'}</Descriptions.Item>\n                <Descriptions.Item span={3} label=\"Email\">{person.email ? person.email : 'S/D'}</Descriptions.Item>                \n            </Descriptions>\n        )\n    }\n\n    return(        \n                        \n        <Table\n        columns={columns}        \n        dataSource={attr.data}\n        loading={attr.loading}\n        rowKey='id'\n        title={() => \n            <React.Fragment>\n                {attr.enterprise ? \n                    <Text mark >{attr.enterprise.name} ({attr.quantity})</Text> : <Text mark>TODOS({attr.quantity})</Text>\n                } \n                <Button type=\"primary\" onClick={() => getPersons(attr.dispatch, 1, '')} style={{float: 'right'}}>TODOS</Button>                \n            </React.Fragment>\n            }\n        pagination={{            \n            total: attr.quantity,\n            simple:true,\n            current: attr.page,\n            onChange: page => {getPersons(attr.dispatch, page, attr.enterprise)} \n        }}\n        expandable={{ expandedRowRender }}\n        \n        />\n        \n    )\n}\n\nexport default TableClients"]},"metadata":{},"sourceType":"module"}